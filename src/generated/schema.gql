# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProfileAddress {
  id: String!
  title: String!
  receiver_name: String!
  latitude: String!
  longitude: String!
  country: String!
  city: String!
  zip_code: String!
  phone_number: String!
  location: String!
  address: String!
  auth_user: AuthUser!
  created_at: Timestamp!
  updated_at: Timestamp!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Listing {
  id: String!
  name: String
  status: String
}

type AuthUser {
  id: String!
  first_name: String!
  email: String!
  phone_number: String!
  encrypted_password: String!
  address: String
  role: String!
  payment_subscription_id: String!
  created_at: Timestamp!
  updated_at: Timestamp!
  mainAddress: String
  profileAddress: [ProfileAddress!]!
  listing: [Listing!]!
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  countBefore: Float!
  countNext: Float!
  countCurrent: Float!
  countTotal: Float!
}

type PaginatedAuthUser {
  edges: [AuthUserEdge!]
  pageInfo: PageInfo
}

type AuthUserEdge {
  cursor: String!
  node: AuthUser!
}

type PaginatedListing {
  edges: [ListingEdge!]
  pageInfo: PageInfo
}

type ListingEdge {
  cursor: String!
  node: Listing!
}

type AuthResponse {
  """JWT access token"""
  accessToken: String!
}

type ConnectPost {
  id: String!
  title: String
  content: String
  auth_user_id: String!
}

type Query {
  authUser(id: String!): AuthUser!
  authUsers(first: Int, after: String, last: Int, before: String, fieldName: String, fieldValue: String): PaginatedAuthUser!
  currentUser: AuthUser
  listings(first: Int, after: String, last: Int, before: String, fieldName: String, fieldValue: String): PaginatedListing
}

type Mutation {
  signIn(SignInput: AuthInput!): AuthResponse!
  createAuthUser(AuthUserInput: AuthUserInput!): AuthUser!
  addPost(ConnectPostInput: ConnectPostInput!): ConnectPost!
}

input AuthInput {
  """User's email address"""
  email: String!

  """User's plain-text password"""
  password: String!
}

input AuthUserInput {
  """User's First name"""
  first_name: String!

  """User's phone number"""
  phone_number: String!

  """User's email address"""
  email: String!

  """User's subscription"""
  payment_subscription_id: String
}

input ConnectPostInput {
  title: String!
  content: String!
  auth_user_id: String
}

type Subscription {
  postAdded: ConnectPost!
}